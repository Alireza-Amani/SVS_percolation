#!/bin/bash

## Check that the user is sourcing this script
_script_name=".setenv.dot"
if [[ "${0##*/}" == ${_script_name} ]] ; then
   cat 1>&2 <<EOF
ERROR: This script should be sourced with:
       source ${0}
EOF
    return 1
fi
unset _script_name

if [[ ${BASH_SOURCE#/} == ${BASH_SOURCE} ]] ; then
   __scriptpath=$(pwd)/${BASH_SOURCE%/*}
else
   __scriptpath=${BASH_SOURCE%/*}
fi
__scriptpath=${__scriptpath%/.}

__DESC='Load package dependencies'
__USAGE="USAGE: ${MYSELF} [-v] [-f] [--cmc|--science] [COMP_ARCH]"

__usage_long() {
   __toto=$(echo -e ${__USAGE})
   more <<EOF
${__DESC}

${__toto}

Options:
    -h, --help         : print this help
    -v, --verbose      : verbose mode
    -e, --external     : only load external dependencies
        --cmc          : set dependencies for CMC network
        --science      : set dependencies for Sience network
EOF
   unset __toto
}

if [[ -d /ssm/net ]] ; then
   export RDENETWORK=${RDENETWORK:-'cmc'}
elif [[ -d /fs/ssm ]] ; then
   export RDENETWORK=${RDENETWORK:-'science'}
fi
# COMP_ARCH_DEFAULT=intel13sp1u2
# [[ x$BASE_ARCH == xAIX-powerpc7 ]] && COMP_ARCH_DEFAULT=xlf13
__verbose=0
__external=0
while [[ $# -gt 0 ]] ; do
   case $1 in
      (-h|--help) __usage_long; exit 0;;
      (-v|--verbose) ((__verbose=__verbose+1));;
      (-e|--external) __external=1;;
      (--cmc) export RDENETWORK=cmc ;;
      (--science) export RDENETWORK=science ;;
      (savehist*) ;;
      # (*) if [[ x$1 != x ]] ; then myerror "Option Not recognized: $1";fi;;
      # (*) COMP_ARCH=${1:-${COMP_ARCH_DEFAULT}} ;;
      (*) echo "WARNING: ignoring '$1'"
    esac
    shift
done

# echo "USING: COMP_ARCH=$COMP_ARCH"
# echo "LINKING for ${RDENETWORK:-undefined} NETWORK"
# for __item in $(ls *-${RDENETWORK:-undefined} 2>/dev/null || true); do
#    ln -sf ${__item} ${__item%-*}
# done

for __bndlname in DEPENDENCIES.external.bndl DEPENDENCIES.external.${RDENETWORK}.bndl ; do
   if [[ -f ${__bndlname} ]] ; then
      echo "+ . \${${__scriptpath##*/}}/${__bndlname}"
      . r.load.dot $(cat ${__bndlname})
   fi
done
if [[ ${__external} == 0 ]] ; then
   __bndlname=DEPENDENCIES.mig.bndl
   if [[ -f ${__bndlname} ]] ; then
      echo "+ . \${${__scriptpath##*/}}/${__bndlname}"
      . r.load.dot $(cat ${__bndlname})
   fi
fi

# COMP_ARCH_DEFAULT=${COMP_ARCH_DEFAULT:-${COMP_ARCH:-intel13sp1u2}}
# [[ x$BASE_ARCH == xAIX-powerpc7 || x$ORDENV_PLAT == xaix-7.1-ppc7-64 ]] && COMP_ARCH_DEFAULT=${COMP_ARCH_DEFAULT:-${COMP_ARCH:-xlf13}}

export PATH=${__scriptpath}/bin:$PATH
#export TEST_S_AR=1
export SSMVERSION=$(ssm version | cut -d. -f1)

export rpnphy=${__scriptpath}
export rpnphy_version='dev'
if [[ -f ${rpnphy}/VERSION ]] ; then
   export rpnphy_version="$(cat ${rpnphy}/VERSION)"
   export rpnphy_version=${rpnphy_version#*/}${__MIGVERSIONSFX__}
fi

unset __DESC __USAGE __usage_long __verbose __external __item __bndlname __scriptpath
